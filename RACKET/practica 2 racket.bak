(define addl
  (lambda (lst)
    (cond
      [(empty? lst) '()]
      [else (cons (+ (car lst) 1)
                  (addl (cdr lst)))])))

(define squares
  (lambda (lst)
    (cond
      [(empty? lst)' ()]
      [else(cons (* (car lst) (car lst))
                 (squares (cdr lst)))])))

(define map-alt
  (lambda (fn lst)
    (cond
      [(empty? lst) '()]
      [else (cons (fn (car lst))
                  (map-alt fn (cdr lst)))])))

